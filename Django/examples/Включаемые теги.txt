1. В директории приложения создать директорию templatetags

2. В этой директории создадим пустой __init__.py и 
файл с произвольным названием, которое потом будет названием тега, например listlastnews.py

3. Содержимое файла listlastnews.py
from django import template
register=template.Library()
 
@register.inclusion_tag('lastnews_tpl.html') # регистрируем тег и подключаем шаблон lastnews_tpl.html 
def lastnews():
    spisok = "111111111111" # можно передавать не только строки, но и сложные объекты типа выборки из базы данных
    return {
    'last3news':spisok
  }

----------------- 

@register.simple_tag
def sidebar_tags():
    tg = "my_func"
    return tg

4. Содержимое файла lastnews_tpl.html
<div id = "news">
{{ last3news }}
</div>

5. В начале шаблона добавить строку 
{% load listlastnews %}

Осталось в нужном месте нашего общего (или частного) шаблона
загрузить данный тег другим спецтегом (load название файла с шаблоном)

{% lastnews %}  # по названию функции


ДОПОЛНЕНИЕ!!!
в файл lastnews_tpl.html может быть передан список и можеть быть необходимость его разбить на посты

{% for post in last3news %}
                <div class="post">
                    <h1><a href="{% url 'post_detail' pk=post.pk %}">{{ post.title }}</a></h1>
                    <p>{{ post.text|linebreaksbr }}</p>
                </div>
            {% endfor %}