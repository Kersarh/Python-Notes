"""
Конструктор — это функция класса, которая создает объект с предопределенными значениями.
Необходимость конструктора обусловлена тем, что часто объекты должны иметь собственные свойства сразу при инициализации класса.
Конструктор класса не позволит создать объект без обязательных полей.
Но позволяет задать значения по умолчанию.
"""


class MyClass:
    def __init__(self, x=2, y=3):  # Это конструктор
        self.num1 = x
        self.num2 = y

    def sum(self):
        numsum = self.num1 + self.num2
        return numsum


# Параметры передаются при инициализации класса
obj = MyClass()  # использованы значения по умолчанию
print("Default", obj.sum())
obj = MyClass(5, 10)
print("5+10=", obj.sum())


# __call__ - срабатывает при вызове экземпляра класса.
class A:
    def __call__(self, z):
        return z * z


a = A()
print(a(8))


# __str__. Он вызывается, когда экземпляр класса должен быть
# представлен в виде строки.
class B:
    def __str__(self):
        return "Hello"


b = B()
print(b)


# Статические методы доступны без создания экземпляра класса
class AB:
    @staticmethod  # Указание на статичкий метод
    def mymethod(a, b):
        return a + b


print(AB.mymethod(12, 13))


# Документирование класса
class A3:
    """Это строка документирования класса."""

    def test(self):
        """Это документирование метода test"""
        pass


print(A3.__doc__)
print(A3.test.__doc__)
