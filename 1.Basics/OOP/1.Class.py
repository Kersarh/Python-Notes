'''
Объе́ктно-ориенти́рованное программи́рование (ООП) — методология программирования, основанная на представлении программы в виде совокупности объектов, каждый из которых является экземпляром определённого класса, а классы образуют иерархию наследования.
'''


class A:
    i = 0  # Атрибут класса

    # Метод класса. Указание первым аргументом self обязательно!
    # Это способ, классу ссылаться на самого себя.
    def prnt(self):
        print("i = ", self.i)

    # _ или __ разный уровень доступа
    def _fun1(self):
        print("_fun1")

    def __fun2(self):
        ''' Этот метод виден только мотодам внутри класса'''
        print("__fun2")


# Теперь мы можем создать несколько экземпляров этого класса
a = A()  # Экземпляр 'a'
b = A()  # Экземпляр 'b'

# Зададим собственные значания для артибута i
a.i = 3  # У экземпляра 'a'  атрибут 'i', равный 3
b.i = 5  # У экземпляра 'b'  атрибут 'i', равный 5
a.prnt()  # Вызов метода экземпляра 'a'
b.prnt()  # Вызов метода экземпляра 'b'

print(a._fun1())  # обращение к __fun2 напрямую вызовет ошибку
